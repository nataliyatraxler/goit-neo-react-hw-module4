{"ast":null,"code":"var _jsxFileName = \"/Users/nataliya/Documents/projects/vscode-basics/homeworks/11111111111/goit-neo-react-hw-module4/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport LoadMoreBtn from './components/LoadMoreBtn/LoadMoreBtn';\nimport ImageModal from './components/ImageModal/ImageModal';\nimport Loader from './components/Loader/Loader';\nimport ErrorMessage from './components/ErrorMessage/ErrorMessage';\nimport { fetchImages } from './services/unsplashApi';\nimport styles from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleSearch = newQuery => {\n    setQuery(newQuery);\n    setImages([]);\n    setPage(1);\n  };\n  useEffect(() => {\n    if (!query) return;\n    const loadImages = async () => {\n      setIsLoading(true);\n      setError(false);\n      try {\n        const data = await fetchImages(query, page);\n        setImages(prev => [...prev, ...data]);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadImages();\n  }, [query, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSubmit: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n      images: images,\n      onImageClick: setSelectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this), images.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n      onClick: () => setPage(page + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 43\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(ImageModal, {\n      isOpen: !!selectedImage,\n      onRequestClose: () => setSelectedImage(null),\n      imageUrl: selectedImage // Передаємо URL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"akhZd5SXhNeNxq0iMOQRQzb6PpA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ImageGallery","LoadMoreBtn","ImageModal","Loader","ErrorMessage","fetchImages","styles","jsxDEV","_jsxDEV","App","_s","images","setImages","query","setQuery","page","setPage","isLoading","setIsLoading","error","setError","selectedImage","setSelectedImage","handleSearch","newQuery","loadImages","data","prev","className","app","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onImageClick","length","onClick","isOpen","onRequestClose","imageUrl","_c","$RefreshReg$"],"sources":["/Users/nataliya/Documents/projects/vscode-basics/homeworks/11111111111/goit-neo-react-hw-module4/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport LoadMoreBtn from './components/LoadMoreBtn/LoadMoreBtn';\nimport ImageModal from './components/ImageModal/ImageModal';\nimport Loader from './components/Loader/Loader';\nimport ErrorMessage from './components/ErrorMessage/ErrorMessage';\nimport { fetchImages } from './services/unsplashApi';\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleSearch = (newQuery) => {\n    setQuery(newQuery);\n    setImages([]);\n    setPage(1);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    const loadImages = async () => {\n      setIsLoading(true);\n      setError(false);\n      try {\n        const data = await fetchImages(query, page);\n        setImages((prev) => [...prev, ...data]);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadImages();\n  }, [query, page]);\n\n  return (\n    <div className={styles.app}>\n      <SearchBar onSubmit={handleSearch} />\n      {error && <ErrorMessage />}\n      <ImageGallery images={images} onImageClick={setSelectedImage} />\n      {isLoading && <Loader />}\n      {images.length > 0 && !isLoading && <LoadMoreBtn onClick={() => setPage(page + 1)} />}\n      {selectedImage && (\n        <ImageModal\n          isOpen={!!selectedImage}\n          onRequestClose={() => setSelectedImage(null)}\n          imageUrl={selectedImage} // Передаємо URL\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}